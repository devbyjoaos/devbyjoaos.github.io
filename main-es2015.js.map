{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/guards/auth.guard.ts","./src/app/auth/guards/random.guard.ts","./src/app/auth/services/login.service.ts","./src/app/auth/token.interceptor.ts","./src/app/components/components.module.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/login-error/login-error.component.ts","./src/app/components/login-error/login-error.component.html","./src/app/components/snackbar/snackbar.service.ts","./src/app/confirmation/confirmation.component.ts","./src/app/confirmation/confirmation.component.html","./src/app/login/login-objects.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/register/register.component.ts","./src/app/login/register/register.component.html","./src/app/overview/services/overview.service.ts","./src/app/selec-itens/itens-objects.ts","./src/app/selec-itens/selec-itens.component.ts","./src/app/selec-itens/selec-itens.component.html","./src/app/service/service.service.ts","./src/app/thanks/thanks.component.ts","./src/app/thanks/thanks.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './auth/guards/auth.guard';\r\nimport { RandomGuard } from './auth/guards/random.guard';\r\nimport { RegisterComponent } from './login/register/register.component';\r\nimport { SelecItensComponent } from './selec-itens/selec-itens.component';\r\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\r\nimport { ThanksComponent } from './thanks/thanks.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n  path: '',\r\n  component: LoginComponent,\r\n  canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'escolha/:name',\r\n    component: SelecItensComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'confirmar/:name',\r\n    component: ConfirmationComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'obrigado/:name',\r\n    component: ThanksComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'inicio',\r\n    loadChildren: () => import('./overview/overview.module').then(m => m.OverviewModule),\r\n    canActivate: [RandomGuard],\r\n    canLoad: [RandomGuard]\r\n  },\r\n  {\r\n    path: 'configuracao',\r\n    loadChildren: () => import('./user-settings/user-settings.module').then(m => m.UserSettingsModule),\r\n    canActivate: [RandomGuard],\r\n    canLoad: [RandomGuard]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: '<router-outlet></router-outlet>'\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoginService } from './auth/services/login.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { OverviewService } from './overview/services/overview.service';\r\nimport { RegisterComponent } from './login/register/register.component';\r\nimport { CharacterComponent } from './user-settings/character/character.component';\r\nimport { HeaderComponent } from './components/header/header.component';\nimport { SelecItensComponent } from './selec-itens/selec-itens.component';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { ThanksComponent } from './thanks/thanks.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    SelecItensComponent,\r\n    ConfirmationComponent,\r\n    ThanksComponent\r\n  ],\r\n  imports: [\r\n    ComponentsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AuthModule\r\n  ],\r\n  providers: [LoginService, OverviewService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { LoginService } from './services/login.service';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { TokenInterceptor } from './token.interceptor';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RandomGuard } from './guards/random.guard';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  providers: [\r\n    AuthGuard,\r\n    LoginService,\r\n    RandomGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router){\r\n    }\r\n\r\n  canActivate() {\r\n    if (this.loginService.isLoggedIn()){\r\n      this.router.navigate(['/inicio']);\r\n    }\r\n    return !this.loginService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanLoad, Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RandomGuard implements CanActivate, CanLoad {\r\n\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n\r\n  canActivate() {\r\n    return this.canLoad();\r\n  }\r\n\r\n  canLoad() {\r\n    if (!this.loginService.isLoggedIn()) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return this.loginService.isLoggedIn();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LoginDto, Tokens, LoginInfo, UserInfo, RegisterDto } from 'src/app/login/login-objects';\r\nimport { catchError, mapTo, tap } from 'rxjs/operators';\r\nimport { logWarnings } from 'protractor/built/driverProviders';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { LoginErrorComponent } from 'src/app/components/login-error/login-error.component';\r\nimport { SnackBarService } from 'src/app/components/snackbar/snackbar.service';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService  {\r\n\r\n  private options: {\r\n    headers?: HttpHeaders;\r\n    observe?: 'body';\r\n    params?: HttpParams;\r\n    reportProgress?: boolean;\r\n    responseType?: any;\r\n    withCredentials?: boolean;\r\n  } = {};\r\n\r\n  private readonly JWT_TOKEN = 'JWT_TOKEN';\r\n  private readonly REFRESH_TOKEN = 'REFRESH_TOKEN';\r\n  private readonly LOGGED_USER = 'LOGGED_USER';\r\n  private loggedUser: UserInfo;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public snackbar: SnackBarService\r\n  ) {\r\n    this.options.headers = new HttpHeaders()\r\n      .set('no-error', 'true')\r\n      .set('Content-Type', 'application/x-www-form-urlencoded');\r\n    this.options.responseType = 'json';\r\n  }\r\n\r\n  public login(user: LoginDto): Observable<boolean> {\r\n    return this.httpClient.post<any>('http://localhost:8080/autenticar', user)\r\n    .pipe(\r\n      tap(info => this.doLoginUser(info.userInfo , info.tokens)),\r\n      mapTo(true),\r\n      catchError(error => {\r\n        this.snackbar.error('Usuário ou senha inválidos.');\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return !!this.getJwtToken();\r\n  }\r\n\r\n  public logout() {\r\n    this.doLogoutUser();\r\n    return this.httpClient.post<any>('http://localhost:8080/sair', {\r\n      refreshToken: this.getRefreshToken()\r\n    }).pipe(\r\n      tap(() => this.doLogoutUser()),\r\n      mapTo(true),\r\n      catchError(error => {\r\n        alert(error.error);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  public doLoginUser(loginInfo: UserInfo, tokens: Tokens){\r\n    this.loggedUser = loginInfo;\r\n    this.storeLoggedUser(this.loggedUser);\r\n    this.storeTokens(tokens);\r\n  }\r\n\r\n  public doLogoutUser() {\r\n    this.loggedUser = null;\r\n    this.removeLoggedUser();\r\n    this.removeTokens();\r\n  }\r\n\r\n  public storeTokens(tokens: Tokens) {\r\n    sessionStorage.setItem(this.JWT_TOKEN, tokens.token);\r\n    sessionStorage.setItem(this.REFRESH_TOKEN, tokens.refreshToken);\r\n  }\r\n\r\n  public storeLoggedUser(userInfo: UserInfo) {\r\n    sessionStorage.setItem(this.LOGGED_USER, JSON.stringify(userInfo));\r\n  }\r\n\r\n  public removeLoggedUser() {\r\n    sessionStorage.removeItem(this.LOGGED_USER);\r\n  }\r\n\r\n  public removeTokens() {\r\n    sessionStorage.removeItem(this.JWT_TOKEN);\r\n    sessionStorage.removeItem(this.REFRESH_TOKEN);\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.httpClient.post<any>(`http://localhost:8080/refresh`, {\r\n      refreshToken: this.getRefreshToken()\r\n    }).pipe(tap((tokens: Tokens) => {\r\n      this.storeJwtToken(tokens.token);\r\n    }));\r\n  }\r\n\r\n  private storeJwtToken(jwt: string) {\r\n    sessionStorage.setItem(this.JWT_TOKEN, jwt);\r\n  }\r\n\r\n  public getJwtToken(){\r\n    return sessionStorage.getItem(this.JWT_TOKEN);\r\n  }\r\n\r\n  public getRefreshToken(){\r\n    return sessionStorage.getItem(this.REFRESH_TOKEN);\r\n  }\r\n\r\n  public getLoggedUser(){\r\n    return JSON.parse(sessionStorage.getItem(this.LOGGED_USER));\r\n  }\r\n\r\n  public registerUser(registerDto: RegisterDto): Observable<void>{\r\n    return this.httpClient.post<void>('http://localhost:8080/registrar', registerDto);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\r\nimport { LoginService } from './services/login.service';\r\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\r\nimport { nextTick } from 'process';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    public loginService: LoginService,\r\n    private router: Router){}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.loginService.getJwtToken()){\r\n      const token = this.loginService.getJwtToken();\r\n      const authReq = request.clone({\r\n        setHeaders: {\r\n         Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      return next\r\n              .handle(authReq)\r\n              .pipe(\r\n                catchError(error => this.handleError(error)),\r\n              )\r\n      ;\r\n    }\r\n    return next.handle(request);\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    return throwError(error.error);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { LoginErrorComponent } from './login-error/login-error.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n\r\nconst MaterialModules = [\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSlideToggleModule,\r\n  MatSliderModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n  FormsModule];\r\n\r\n@NgModule({\r\n  declarations: [LoginErrorComponent, HeaderComponent],\r\n  imports: [MaterialModules],\r\n  exports: [MaterialModules, HeaderComponent]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/auth/services/login.service';\r\nimport { UserInfo } from 'src/app/login/login-objects';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent {\r\n\r\n  userInfo = new UserInfo();\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) {\r\n    this.userInfo = this.loginService.getLoggedUser();\r\n   }\r\n\r\n   logout() {\r\n     this.loginService.logout();\r\n     window.location.reload();\r\n   }\r\n\r\n   goToConfiguration() {\r\n     this.router.navigate(['/configuracao']);\r\n   }\r\n\r\n}\r\n","\r\n<mat-toolbar style=\"height: 50px; background: coral ; background-size: cover; background-repeat: no-repeat; overflow: visible; display: flex; align-items: center;\">\r\n<mat-toolbar-row style=\" display: flex;\">\r\n  <button mat-icon-button>\r\n  <mat-icon>notifications</mat-icon>\r\n  </button>\r\n  <span style=\"flex: 1 1 auto;\"></span>\r\n  <button mat-icon-button class=\"example-icon\" (click)=\"goToConfiguration()\">\r\n  <mat-icon>settings</mat-icon>\r\n  </button>\r\n  <button mat-icon-button class=\"example-icon\" [matMenuTriggerFor]=\"user\">\r\n  <mat-icon>account_circle</mat-icon>\r\n  </button>\r\n</mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-menu #user=\"matMenu\" xPosition=\"before\" style=\"padding: 0 ;\">\r\n  <h4 style=\"display: flex; justify-content: center; align-items: center; color: coral\">\r\n    <p>{{userInfo.nickname}}</p>\r\n  </h4>\r\n <div style=\"display: flex; justify-content: center; align-items: center; cursor: pointer;\" (click)=\"logout()\">\r\n   <mat-icon>exit_to_app</mat-icon>\r\n  <span>Logout</span>\r\n</div>\r\n</mat-menu>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login-error',\r\n  templateUrl: './login-error.component.html',\r\n})\r\nexport class LoginErrorComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoginErrorComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public close(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-mat-dialog-title style=\"width: 200;\">Usuário ou senha incorretos</h2>\r\n<div mat-dialog-content >\r\n  <button mat-raised-button color=\"warn\" (click)=\"close()\" style=\"margin-left: 200px;\">Ok</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackBarService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  success(message: string, action: string = 'Fechar', duration: number = 3000) {\r\n    this.snackBar.open(message, action, { duration, panelClass: ['success-snackbar'] });\r\n  }\r\n  warning(message: string, action: string = 'Fechar', duration: number = 3000) {\r\n    this.snackBar.open(message, action, { duration, panelClass: ['warn-snackbar'] });\r\n  }\r\n  error(message: string, action: string = 'Fechar', duration: number = 3000) {\r\n    this.snackBar.open(message, action, { duration, panelClass: ['error-snackbar'] });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Person, Product } from '../selec-itens/itens-objects';\nimport { ServiceService } from '../service/service.service';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss']\n})\nexport class ConfirmationComponent implements OnInit {\n\n  name: String;\n  productList: Product[] = [];\n\n  constructor(\n    private service: ServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n\n\n    this.productList = this.service.productList;\n    this.route.params.subscribe(params => {\n      this.name = params.name;\n\n      if(!(this.service.productList.length > 0)){\n        this.router.navigate([\"escolha\", this.name]);\n      }\n\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  conclude(){\n    this.productList.forEach(product => {\n      var person = new Person();\n      person.name = this.name;\n      person.productId = product.id;\n\n      this.service.concludeSelection(person).subscribe();\n    }\n    );\n    this.router.navigate([\"obrigado\", this.name]);\n  }\n\n}\n","<div style=\"background: linear-gradient(27deg, rgba(0,0,0,1) 2%, rgba(130,138,204,1) 44%, rgba(43,95,235,1) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\n  <mat-card style=\"background-color: white; bottom: 0; max-height: 70% !important; color: black; min-height: 35%; align-content: space-between; min-width: 20%\">\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: rgba(43,95,235,1);\">\n      {{name}}\n    </mat-card-title>\n    <mat-card-content>\n      <div class=\"row\" *ngFor=\"let product of productList\" style=\"align-content: center; margin-top: 0.3em; margin-bottom: 0.3em;\">\n          <p style=\"text-align: center; font-size: 16px; align-items: center;\" readonly=\"true\" disabled=\"true\">\n            <mat-icon style=\"color: rgba(43,95,235,1);\">star_border</mat-icon>\n            {{product.name}}\n            <mat-icon style=\"color: rgba(43,95,235,1);\">star_border</mat-icon>\n          </p>\n      </div>\n    </mat-card-content>\n    <mat-card-footer style=\"display: flex; justify-content: center; min-height: 10%;\">\n      <button mat-raised-button style=\"margin-top: 5px; margin-bottom: 5px; bottom: 0; position: absolute; background-color: rgba(43,95,235,1);\" (click)=\"conclude()\">Concluir</button>\n    </mat-card-footer>\n  </mat-card>\n</div>\n","\r\nexport class LoginDto {\r\n  nickname: string;\r\n  password: string;\r\n\r\n}\r\n\r\nexport class Tokens {\r\n  token: string;\r\n  refreshToken: string;\r\n}\r\n\r\nexport class UserInfo {\r\n  id: number;\r\n  nickname: string;\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\nexport class LoginInfo {\r\n  tokens: Tokens;\r\n  userInfo: UserInfo;\r\n}\r\n\r\nexport class RegisterDto{\r\n  email: string;\r\n  name: string;\r\n  nickname: string;\r\n  password: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginDto } from './login-objects';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../auth/services/login.service';\r\nimport { SnackBarService } from '../components/snackbar/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  name: String;\r\n  loginDto = new LoginDto();\r\n  logou: boolean;\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private snackbar: SnackBarService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loginClick(){\r\n    this.router.navigate([\"escolha\", this.name]);\r\n  }\r\n\r\n}\r\n","<div style=\"background: linear-gradient(27deg, rgba(0,0,0,1) 2%, rgba(130,138,204,1) 44%, rgba(43,95,235,1) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\r\n  <mat-card style=\"background-color: white; bottom: 0;\">\r\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: coral;\">\r\n      <img width=\"320\" height=\"240\" src=\"../../assets/cd_golpe_de_estado_-_nem_pol_cia_nem_bandido.png\">\r\n    </mat-card-title>\r\n    <mat-card-content style=\"opacity: 1 !important; color: black;\">\r\n      <form>\r\n        <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n          <mat-form-field style=\"width: 80%;\">\r\n            <mat-label style=\"justify-content: center; display: flex;\">Nome</mat-label>\r\n            <input matInput [(ngModel)]=\"name\" name=\"nickname\" color=\"blue\">\r\n          </mat-form-field>\r\n        </div>\r\n      </form>\r\n    <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <button mat-raised-button style=\"width: 80%\" (click)=\"loginClick()\">Entrar</button>\r\n  </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RegisterDto } from '../login-objects';\r\nimport { LoginService } from 'src/app/auth/services/login.service';\r\nimport { SnackBarService } from 'src/app/components/snackbar/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerDto = new RegisterDto();\r\n  repeatPassword: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private snackbar: SnackBarService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  voltar() {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  passwordMatch() {\r\n    return this.registerDto.password === this.repeatPassword;\r\n  }\r\n\r\n  registerNewUser() {\r\n    this.loginService.registerUser(this.registerDto).subscribe(dale => {\r\n      this.snackbar.success('Registrado com sucesso');\r\n      this.router.navigate(['login']);\r\n    }, error => {\r\n      this.snackbar.error(error.error.message);\r\n    }\r\n      );\r\n  }\r\n\r\n}\r\n","<div style=\"background-image: url(https://i.imgur.com/P7TgD2J.jpg) ; height: 100%; display: flex; align-items: center; justify-content: center;\">\r\n  <mat-card style=\"background-color: white;\">\r\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: coral;\">Registrar Conta</mat-card-title>\r\n    <mat-card-content style=\"opacity: 1 !important; color: black;\">\r\n    <form>\r\n      <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Endereço de e-mail</mat-label>\r\n        <input matInput style=\"text-align: center;\" [(ngModel)]=\"registerDto.email\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Nome</mat-label>\r\n        <input matInput style=\"text-align: center;\" [(ngModel)]=\"registerDto.name\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Apelido</mat-label>\r\n        <input matInput style=\"text-align: center;\" [(ngModel)]=\"registerDto.nickname\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\" floatLabel=\"never\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Senha</mat-label>\r\n        <input matInput type=\"password\" style=\"text-align: center;\" [(ngModel)]=\"registerDto.password\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\" floatLabel=\"never\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Repetir Senha</mat-label>\r\n        <input matInput type=\"password\" style=\"text-align: center;\" [(ngModel)]=\"repeatPassword\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  </form>\r\n  <div class=\"row\" style=\"display: flex; justify-content: center;\">\r\n  <button mat-raised-button (click)=\"voltar()\" >Voltar</button>\r\n  <button mat-raised-button color=\"warn\" style=\"margin-left: 15px;\" (click)=\"registerNewUser()\" >Registrar</button>\r\n</div>\r\n</mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Observable} from 'rxjs';\r\nimport { LoginDto} from 'src/app/login/login-objects';\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OverviewService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n\r\n  public ver(): Observable<LoginDto> {\r\n    return this.httpClient.get<LoginDto>('http://localhost:8080/login/v1/see');\r\n  }\r\n\r\n}\r\n","export class Product {\r\n  id: number;\r\n  name: String;\r\n  quantity: number;\r\n  checked: boolean;\r\n}\r\n\r\nexport class Person{\r\n  id: number;\r\n  name: String;\r\n  productId: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SnackBarService } from '../components/snackbar/snackbar.service';\nimport { ServiceService } from '../service/service.service';\nimport { Product } from './itens-objects';\n\n@Component({\n  selector: 'app-selec-itens',\n  templateUrl: './selec-itens.component.html',\n  styleUrls: ['./selec-itens.component.scss']\n})\nexport class SelecItensComponent implements OnInit {\n\n  name: String;\n  productList: Product[] = [];\n  size: number = 0;\n\n  constructor(\n    private service: ServiceService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private snackbar: SnackBarService\n  ) {\n    this.service.getProducts().subscribe( result => {\n      this.productList = result;\n      this.size = this.productList.length;\n    });\n    this.activatedRoute.params.subscribe(params => {\n      this.name = params.name;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectProducts(){\n    const selectedList = this.productList.filter(x => x.checked);\n    if(!(selectedList.length > 0)){\n      this.snackbar.error(\"Selecione ao menos uma opção\");\n    }\n    else{\n      this.service.name = this.name;\n      this.service.productList = selectedList;\n      this.router.navigate([\"confirmar\", this.name]);\n    }\n  }\n\n}\n","<div style=\"background: linear-gradient(27deg, rgba(0,0,0,1) 2%, rgba(130,138,204,1) 44%, rgba(43,95,235,1) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\n  <mat-card style=\"background-color: white; bottom: 0; max-height: 70% !important; color: black; min-width: 40%; max-width: 80%;\" *ngIf=\"size>0\">\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: rgba(43,95,235,1);\">\n      Selecione o(s) presente(s) que desejar.\n    </mat-card-title>\n    <div style=\"overflow-y: scroll; max-height: 360px;\">\n      <div class=\"row\" *ngFor=\"let product of productList\" style=\"margin-left: 10px; margin-top: 10px;\">\n        <mat-checkbox [(ngModel)]=\"product.checked\">{{product.name}}</mat-checkbox>\n      </div>\n    </div>\n    <mat-card-footer style=\"display: flex; justify-content: center; min-height: 10%;\">\n      <button mat-raised-button  style=\"margin-top: 5px; margin-bottom: 5px;\" (click)=\"selectProducts()\">Finalizar</button>\n    </mat-card-footer>\n  </mat-card>\n  <mat-spinner *ngIf=\"size==0\"></mat-spinner>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Person, Product } from '../selec-itens/itens-objects';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  name: String;\n  productList: Product[] = [];\n\n  constructor(\n    private httpClient: HttpClient,\n  ) { }\n\n  public getProducts(): Observable<Product[]>{\n    return this.httpClient.get<Product[]>('https://cha-de-bebe.herokuapp.com/produto/v1');\n  }\n\n  public concludeSelection(person: Person): Observable<Person>{\n    return this.httpClient.post<Person>('https://cha-de-bebe.herokuapp.com/pessoa/v1', person);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thanks',\n  templateUrl: './thanks.component.html',\n  styleUrls: ['./thanks.component.scss']\n})\nexport class ThanksComponent implements OnInit {\n\n  height: String = \"30%\";\n  width: String = \"30%\";\n  mobile: boolean;\n\n  constructor() {\n    console.log(this.height);\n  }\n\n  ngOnInit(): void {\n    if (window.screen.width <= 425) { // 768px portrait\n      this.mobile = true;\n    }\n  }\n\n}\n","<div style=\"background: linear-gradient(27deg, rgba(0,0,0,1) 2%, rgba(130,138,204,1) 44%, rgba(43,95,235,1) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\n  <img src=\"../../assets/Obrigado (2) (2).png\" height=\"30%\" width=\"30%\" *ngIf=\"!mobile\">\n  <img src=\"../../assets/Obrigado (2) (2).png\" height=\"25%\" width=\"65%\" *ngIf=\"mobile\">\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}