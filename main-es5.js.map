{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.module.ts","webpack:///src/app/auth/guards/auth.guard.ts","webpack:///src/app/auth/guards/random.guard.ts","webpack:///src/app/auth/services/login.service.ts","webpack:///src/app/auth/token.interceptor.ts","webpack:///src/app/components/components.module.ts","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/login-error/login-error.component.ts","webpack:///src/app/components/login-error/login-error.component.html","webpack:///src/app/components/snackbar/snackbar.service.ts","webpack:///src/app/confirmation/confirmation.component.ts","webpack:///src/app/confirmation/confirmation.component.html","webpack:///src/app/login/login-objects.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/register/register.component.ts","webpack:///src/app/login/register/register.component.html","webpack:///src/app/overview/services/overview.service.ts","webpack:///src/app/selec-itens/itens-objects.ts","webpack:///src/app/selec-itens/selec-itens.component.ts","webpack:///src/app/selec-itens/selec-itens.component.html","webpack:///src/app/service/service.service.ts","webpack:///src/app/thanks/thanks.component.ts","webpack:///src/app/thanks/thanks.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","loadChildren","m","OverviewModule","canLoad","UserSettingsModule","AppRoutingModule","forRoot","imports","AppComponent","selector","template","AppModule","declarations","providers","bootstrap","AuthModule","provide","useClass","multi","AuthGuard","loginService","router","isLoggedIn","navigate","providedIn","RandomGuard","LoginService","httpClient","dialog","snackbar","options","JWT_TOKEN","REFRESH_TOKEN","LOGGED_USER","headers","set","responseType","user","post","pipe","info","doLoginUser","userInfo","tokens","error","getJwtToken","doLogoutUser","refreshToken","getRefreshToken","alert","loginInfo","loggedUser","storeLoggedUser","storeTokens","removeLoggedUser","removeTokens","sessionStorage","setItem","token","JSON","stringify","removeItem","storeJwtToken","jwt","getItem","parse","registerDto","TokenInterceptor","request","next","authReq","clone","setHeaders","Authorization","handle","handleError","MaterialModules","ComponentsModule","HeaderComponent","getLoggedUser","logout","window","location","reload","goToConfiguration","templateUrl","styleUrls","LoginErrorComponent","dialogRef","close","SnackBarService","snackBar","message","action","duration","open","panelClass","ConfirmationComponent","service","route","productList","params","subscribe","name","length","forEach","product","person","productId","concludeSelection","conclude","LoginDto","Tokens","UserInfo","LoginInfo","RegisterDto","LoginComponent","loginDto","loginClick","RegisterComponent","password","repeatPassword","registerUser","dale","success","voltar","registerNewUser","OverviewService","get","Product","Person","SelecItensComponent","activatedRoute","size","getProducts","result","selectedList","filter","x","checked","ServiceService","ThanksComponent","height","width","console","log","screen","mobile","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { AuthGuard } from './auth/guards/auth.guard';\r\nimport { RandomGuard } from './auth/guards/random.guard';\r\nimport { RegisterComponent } from './login/register/register.component';\r\nimport { SelecItensComponent } from './selec-itens/selec-itens.component';\r\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\r\nimport { ThanksComponent } from './thanks/thanks.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n  path: '',\r\n  component: LoginComponent,\r\n  canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'escolha/:name',\r\n    component: SelecItensComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'confirmar/:name',\r\n    component: ConfirmationComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'obrigado/:name',\r\n    component: ThanksComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'inicio',\r\n    loadChildren: () => import('./overview/overview.module').then(m => m.OverviewModule),\r\n    canActivate: [RandomGuard],\r\n    canLoad: [RandomGuard]\r\n  },\r\n  {\r\n    path: 'configuracao',\r\n    loadChildren: () => import('./user-settings/user-settings.module').then(m => m.UserSettingsModule),\r\n    canActivate: [RandomGuard],\r\n    canLoad: [RandomGuard]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: '<router-outlet></router-outlet>'\r\n})\r\nexport class AppComponent {\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ComponentsModule } from './components/components.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LoginService } from './auth/services/login.service';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { OverviewService } from './overview/services/overview.service';\r\nimport { RegisterComponent } from './login/register/register.component';\r\nimport { CharacterComponent } from './user-settings/character/character.component';\r\nimport { HeaderComponent } from './components/header/header.component';\nimport { SelecItensComponent } from './selec-itens/selec-itens.component';\nimport { ConfirmationComponent } from './confirmation/confirmation.component';\nimport { ThanksComponent } from './thanks/thanks.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    SelecItensComponent,\r\n    ConfirmationComponent,\r\n    ThanksComponent\r\n  ],\r\n  imports: [\r\n    ComponentsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    AuthModule\r\n  ],\r\n  providers: [LoginService, OverviewService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { LoginService } from './services/login.service';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { TokenInterceptor } from './token.interceptor';\r\nimport { RouterModule } from '@angular/router';\r\nimport { RandomGuard } from './guards/random.guard';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  providers: [\r\n    AuthGuard,\r\n    LoginService,\r\n    RandomGuard,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router){\r\n    }\r\n\r\n  canActivate() {\r\n    if (this.loginService.isLoggedIn()){\r\n      this.router.navigate(['/inicio']);\r\n    }\r\n    return !this.loginService.isLoggedIn();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanLoad, Router } from '@angular/router';\r\nimport { LoginService } from '../services/login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RandomGuard implements CanActivate, CanLoad {\r\n\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n\r\n  canActivate() {\r\n    return this.canLoad();\r\n  }\r\n\r\n  canLoad() {\r\n    if (!this.loginService.isLoggedIn()) {\r\n      this.router.navigate(['/login']);\r\n    }\r\n    return this.loginService.isLoggedIn();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { LoginDto, Tokens, LoginInfo, UserInfo, RegisterDto } from 'src/app/login/login-objects';\r\nimport { catchError, mapTo, tap } from 'rxjs/operators';\r\nimport { logWarnings } from 'protractor/built/driverProviders';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { LoginErrorComponent } from 'src/app/components/login-error/login-error.component';\r\nimport { SnackBarService } from 'src/app/components/snackbar/snackbar.service';\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService  {\r\n\r\n  private options: {\r\n    headers?: HttpHeaders;\r\n    observe?: 'body';\r\n    params?: HttpParams;\r\n    reportProgress?: boolean;\r\n    responseType?: any;\r\n    withCredentials?: boolean;\r\n  } = {};\r\n\r\n  private readonly JWT_TOKEN = 'JWT_TOKEN';\r\n  private readonly REFRESH_TOKEN = 'REFRESH_TOKEN';\r\n  private readonly LOGGED_USER = 'LOGGED_USER';\r\n  private loggedUser: UserInfo;\r\n\r\n  constructor(\r\n    private httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public snackbar: SnackBarService\r\n  ) {\r\n    this.options.headers = new HttpHeaders()\r\n      .set('no-error', 'true')\r\n      .set('Content-Type', 'application/x-www-form-urlencoded');\r\n    this.options.responseType = 'json';\r\n  }\r\n\r\n  public login(user: LoginDto): Observable<boolean> {\r\n    return this.httpClient.post<any>('http://localhost:8080/autenticar', user)\r\n    .pipe(\r\n      tap(info => this.doLoginUser(info.userInfo , info.tokens)),\r\n      mapTo(true),\r\n      catchError(error => {\r\n        this.snackbar.error('Usuário ou senha inválidos.');\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  isLoggedIn() {\r\n    return !!this.getJwtToken();\r\n  }\r\n\r\n  public logout() {\r\n    this.doLogoutUser();\r\n    return this.httpClient.post<any>('http://localhost:8080/sair', {\r\n      refreshToken: this.getRefreshToken()\r\n    }).pipe(\r\n      tap(() => this.doLogoutUser()),\r\n      mapTo(true),\r\n      catchError(error => {\r\n        alert(error.error);\r\n        return of(false);\r\n      })\r\n    );\r\n  }\r\n\r\n  public doLoginUser(loginInfo: UserInfo, tokens: Tokens){\r\n    this.loggedUser = loginInfo;\r\n    this.storeLoggedUser(this.loggedUser);\r\n    this.storeTokens(tokens);\r\n  }\r\n\r\n  public doLogoutUser() {\r\n    this.loggedUser = null;\r\n    this.removeLoggedUser();\r\n    this.removeTokens();\r\n  }\r\n\r\n  public storeTokens(tokens: Tokens) {\r\n    sessionStorage.setItem(this.JWT_TOKEN, tokens.token);\r\n    sessionStorage.setItem(this.REFRESH_TOKEN, tokens.refreshToken);\r\n  }\r\n\r\n  public storeLoggedUser(userInfo: UserInfo) {\r\n    sessionStorage.setItem(this.LOGGED_USER, JSON.stringify(userInfo));\r\n  }\r\n\r\n  public removeLoggedUser() {\r\n    sessionStorage.removeItem(this.LOGGED_USER);\r\n  }\r\n\r\n  public removeTokens() {\r\n    sessionStorage.removeItem(this.JWT_TOKEN);\r\n    sessionStorage.removeItem(this.REFRESH_TOKEN);\r\n  }\r\n\r\n  refreshToken() {\r\n    return this.httpClient.post<any>(`http://localhost:8080/refresh`, {\r\n      refreshToken: this.getRefreshToken()\r\n    }).pipe(tap((tokens: Tokens) => {\r\n      this.storeJwtToken(tokens.token);\r\n    }));\r\n  }\r\n\r\n  private storeJwtToken(jwt: string) {\r\n    sessionStorage.setItem(this.JWT_TOKEN, jwt);\r\n  }\r\n\r\n  public getJwtToken(){\r\n    return sessionStorage.getItem(this.JWT_TOKEN);\r\n  }\r\n\r\n  public getRefreshToken(){\r\n    return sessionStorage.getItem(this.REFRESH_TOKEN);\r\n  }\r\n\r\n  public getLoggedUser(){\r\n    return JSON.parse(sessionStorage.getItem(this.LOGGED_USER));\r\n  }\r\n\r\n  public registerUser(registerDto: RegisterDto): Observable<void>{\r\n    return this.httpClient.post<void>('http://localhost:8080/registrar', registerDto);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, BehaviorSubject, throwError } from 'rxjs';\r\nimport { LoginService } from './services/login.service';\r\nimport { catchError, filter, take, switchMap } from 'rxjs/operators';\r\nimport { nextTick } from 'process';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor(\r\n    public loginService: LoginService,\r\n    private router: Router){}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    if (this.loginService.getJwtToken()){\r\n      const token = this.loginService.getJwtToken();\r\n      const authReq = request.clone({\r\n        setHeaders: {\r\n         Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      return next\r\n              .handle(authReq)\r\n              .pipe(\r\n                catchError(error => this.handleError(error)),\r\n              )\r\n      ;\r\n    }\r\n    return next.handle(request);\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    return throwError(error.error);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { LoginErrorComponent } from './login-error/login-error.component';\r\nimport { HeaderComponent } from './header/header.component';\r\n\r\n\r\nconst MaterialModules = [\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatFormFieldModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSlideToggleModule,\r\n  MatSliderModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n  FormsModule];\r\n\r\n@NgModule({\r\n  declarations: [LoginErrorComponent, HeaderComponent],\r\n  imports: [MaterialModules],\r\n  exports: [MaterialModules, HeaderComponent]\r\n})\r\nexport class ComponentsModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from 'src/app/auth/services/login.service';\r\nimport { UserInfo } from 'src/app/login/login-objects';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent {\r\n\r\n  userInfo = new UserInfo();\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router\r\n  ) {\r\n    this.userInfo = this.loginService.getLoggedUser();\r\n   }\r\n\r\n   logout() {\r\n     this.loginService.logout();\r\n     window.location.reload();\r\n   }\r\n\r\n   goToConfiguration() {\r\n     this.router.navigate(['/configuracao']);\r\n   }\r\n\r\n}\r\n","\r\n<mat-toolbar style=\"height: 50px; background: coral ; background-size: cover; background-repeat: no-repeat; overflow: visible; display: flex; align-items: center;\">\r\n<mat-toolbar-row style=\" display: flex;\">\r\n  <button mat-icon-button>\r\n  <mat-icon>notifications</mat-icon>\r\n  </button>\r\n  <span style=\"flex: 1 1 auto;\"></span>\r\n  <button mat-icon-button class=\"example-icon\" (click)=\"goToConfiguration()\">\r\n  <mat-icon>settings</mat-icon>\r\n  </button>\r\n  <button mat-icon-button class=\"example-icon\" [matMenuTriggerFor]=\"user\">\r\n  <mat-icon>account_circle</mat-icon>\r\n  </button>\r\n</mat-toolbar-row>\r\n</mat-toolbar>\r\n<mat-menu #user=\"matMenu\" xPosition=\"before\" style=\"padding: 0 ;\">\r\n  <h4 style=\"display: flex; justify-content: center; align-items: center; color: coral\">\r\n    <p>{{userInfo.nickname}}</p>\r\n  </h4>\r\n <div style=\"display: flex; justify-content: center; align-items: center; cursor: pointer;\" (click)=\"logout()\">\r\n   <mat-icon>exit_to_app</mat-icon>\r\n  <span>Logout</span>\r\n</div>\r\n</mat-menu>\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-login-error',\r\n  templateUrl: './login-error.component.html',\r\n})\r\nexport class LoginErrorComponent implements OnInit {\r\n\r\n  constructor(public dialogRef: MatDialogRef<LoginErrorComponent>) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public close(){\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<h2 mat-mat-dialog-title style=\"width: 200;\">Usuário ou senha incorretos</h2>\r\n<div mat-dialog-content >\r\n  <button mat-raised-button color=\"warn\" (click)=\"close()\" style=\"margin-left: 200px;\">Ok</button>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackBarService {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  success(message: string, action: string = 'Fechar', duration: number = 3000) {\r\n    this.snackBar.open(message, action, { duration, panelClass: ['success-snackbar'] });\r\n  }\r\n  warning(message: string, action: string = 'Fechar', duration: number = 3000) {\r\n    this.snackBar.open(message, action, { duration, panelClass: ['warn-snackbar'] });\r\n  }\r\n  error(message: string, action: string = 'Fechar', duration: number = 3000) {\r\n    this.snackBar.open(message, action, { duration, panelClass: ['error-snackbar'] });\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Person, Product } from '../selec-itens/itens-objects';\nimport { ServiceService } from '../service/service.service';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss']\n})\nexport class ConfirmationComponent implements OnInit {\n\n  name: String;\n  productList: Product[] = [];\n\n  constructor(\n    private service: ServiceService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n\n\n    this.productList = this.service.productList;\n    this.route.params.subscribe(params => {\n      this.name = params.name;\n\n      if(!(this.service.productList.length > 0)){\n        this.router.navigate([\"escolha\", this.name]);\n      }\n\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  conclude(){\n    this.productList.forEach(product => {\n      var person = new Person();\n      person.name = this.name;\n      person.productId = product.id;\n\n      this.service.concludeSelection(person).subscribe();\n    }\n    );\n    this.router.navigate([\"obrigado\", this.name]);\n  }\n\n}\n","<div style=\"background: linear-gradient(27deg, rgb(255, 245, 248) 2%, rgba(255,179,169) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\n  <mat-card style=\"background-color: white; bottom: 0; max-height: 70% !important; color: black; min-height: 35%; align-content: space-between; min-width: 20%\">\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: rgba(43,95,235,1);\">\n      {{name}}\n    </mat-card-title>\n    <mat-card-content>\n      <div class=\"row\" *ngFor=\"let product of productList\" style=\"align-content: center; margin-top: 0.3em; margin-bottom: 0.3em;\">\n          <p style=\"text-align: center; font-size: 16px; align-items: center;\" readonly=\"true\" disabled=\"true\">\n            <mat-icon style=\"color: rgba(43,95,235,1);\">star_border</mat-icon>\n            {{product.name}}\n            <mat-icon style=\"color: rgba(43,95,235,1);\">star_border</mat-icon>\n          </p>\n      </div>\n    </mat-card-content>\n    <mat-card-footer style=\"display: flex; justify-content: center; min-height: 10%;\">\n      <button mat-raised-button style=\"margin-top: 5px; margin-bottom: 5px; bottom: 0; position: absolute; background-color: rgba(43,95,235,1);\" (click)=\"conclude()\">Concluir</button>\n    </mat-card-footer>\n  </mat-card>\n</div>\n","\r\nexport class LoginDto {\r\n  nickname: string;\r\n  password: string;\r\n\r\n}\r\n\r\nexport class Tokens {\r\n  token: string;\r\n  refreshToken: string;\r\n}\r\n\r\nexport class UserInfo {\r\n  id: number;\r\n  nickname: string;\r\n  email: string;\r\n  name: string;\r\n}\r\n\r\nexport class LoginInfo {\r\n  tokens: Tokens;\r\n  userInfo: UserInfo;\r\n}\r\n\r\nexport class RegisterDto{\r\n  email: string;\r\n  name: string;\r\n  nickname: string;\r\n  password: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoginDto } from './login-objects';\r\n\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from '../auth/services/login.service';\r\nimport { SnackBarService } from '../components/snackbar/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  name: String;\r\n  loginDto = new LoginDto();\r\n  logou: boolean;\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private router: Router,\r\n    private snackbar: SnackBarService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  loginClick(){\r\n    this.router.navigate([\"escolha\", this.name]);\r\n  }\r\n\r\n}\r\n","<div style=\"background: linear-gradient(27deg, rgb(255, 245, 248) 2%, rgba(255,179,169) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\r\n  <mat-card style=\"background-color: white; bottom: 0;\">\r\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: coral;\">\r\n      <img width=\"320\" height=\"240\" src=\"../../assets/foto-inicio-cha.jpg\">\r\n    </mat-card-title>\r\n    <mat-card-content style=\"opacity: 1 !important; color: black;\">\r\n      <form>\r\n        <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n          <mat-form-field style=\"width: 80%;\">\r\n            <mat-label style=\"justify-content: center; display: flex;\">Nome</mat-label>\r\n            <input matInput [(ngModel)]=\"name\" name=\"nickname\" color=\"blue\">\r\n          </mat-form-field>\r\n        </div>\r\n      </form>\r\n    <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <button mat-raised-button style=\"width: 80%\" (click)=\"loginClick()\">Entrar</button>\r\n  </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RegisterDto } from '../login-objects';\r\nimport { LoginService } from 'src/app/auth/services/login.service';\r\nimport { SnackBarService } from 'src/app/components/snackbar/snackbar.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  registerDto = new RegisterDto();\r\n  repeatPassword: string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private snackbar: SnackBarService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  voltar() {\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  passwordMatch() {\r\n    return this.registerDto.password === this.repeatPassword;\r\n  }\r\n\r\n  registerNewUser() {\r\n    this.loginService.registerUser(this.registerDto).subscribe(dale => {\r\n      this.snackbar.success('Registrado com sucesso');\r\n      this.router.navigate(['login']);\r\n    }, error => {\r\n      this.snackbar.error(error.error.message);\r\n    }\r\n      );\r\n  }\r\n\r\n}\r\n","<div style=\"background-image: url(https://i.imgur.com/P7TgD2J.jpg) ; height: 100%; display: flex; align-items: center; justify-content: center;\">\r\n  <mat-card style=\"background-color: white;\">\r\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: coral;\">Registrar Conta</mat-card-title>\r\n    <mat-card-content style=\"opacity: 1 !important; color: black;\">\r\n    <form>\r\n      <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Endereço de e-mail</mat-label>\r\n        <input matInput style=\"text-align: center;\" [(ngModel)]=\"registerDto.email\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Nome</mat-label>\r\n        <input matInput style=\"text-align: center;\" [(ngModel)]=\"registerDto.name\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Apelido</mat-label>\r\n        <input matInput style=\"text-align: center;\" [(ngModel)]=\"registerDto.nickname\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\" floatLabel=\"never\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Senha</mat-label>\r\n        <input matInput type=\"password\" style=\"text-align: center;\" [(ngModel)]=\"registerDto.password\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  <div class=\"row\" style=\"justify-content: center; display: flex;\">\r\n    <mat-form-field appearance=\"outline\" class=\"col-4\" floatLabel=\"never\">\r\n        <mat-label style=\"justify-content: center; display: flex;\">Repetir Senha</mat-label>\r\n        <input matInput type=\"password\" style=\"text-align: center;\" [(ngModel)]=\"repeatPassword\" name=\"email\">\r\n    </mat-form-field>\r\n  </div>\r\n  </form>\r\n  <div class=\"row\" style=\"display: flex; justify-content: center;\">\r\n  <button mat-raised-button (click)=\"voltar()\" >Voltar</button>\r\n  <button mat-raised-button color=\"warn\" style=\"margin-left: 15px;\" (click)=\"registerNewUser()\" >Registrar</button>\r\n</div>\r\n</mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient} from '@angular/common/http';\r\nimport { Observable} from 'rxjs';\r\nimport { LoginDto} from 'src/app/login/login-objects';\r\n\r\n\r\n\r\n\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class OverviewService {\r\n\r\n  constructor(\r\n    private httpClient: HttpClient\r\n  ) {\r\n  }\r\n\r\n\r\n  public ver(): Observable<LoginDto> {\r\n    return this.httpClient.get<LoginDto>('http://localhost:8080/login/v1/see');\r\n  }\r\n\r\n}\r\n","export class Product {\r\n  id: number;\r\n  name: String;\r\n  quantity: number;\r\n  checked: boolean;\r\n}\r\n\r\nexport class Person{\r\n  id: number;\r\n  name: String;\r\n  productId: number;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SnackBarService } from '../components/snackbar/snackbar.service';\nimport { ServiceService } from '../service/service.service';\nimport { Product } from './itens-objects';\n\n@Component({\n  selector: 'app-selec-itens',\n  templateUrl: './selec-itens.component.html',\n  styleUrls: ['./selec-itens.component.scss']\n})\nexport class SelecItensComponent implements OnInit {\n\n  name: String;\n  productList: Product[] = [];\n  size: number = 0;\n\n  constructor(\n    private service: ServiceService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    private snackbar: SnackBarService\n  ) {\n    this.service.getProducts().subscribe( result => {\n      this.productList = result;\n      this.size = this.productList.length;\n    });\n    this.activatedRoute.params.subscribe(params => {\n      this.name = params.name;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  selectProducts(){\n    const selectedList = this.productList.filter(x => x.checked);\n    if(!(selectedList.length > 0)){\n      this.snackbar.error(\"Selecione ao menos uma opção\");\n    }\n    else{\n      this.service.name = this.name;\n      this.service.productList = selectedList;\n      this.router.navigate([\"confirmar\", this.name]);\n    }\n  }\n\n}\n","<div style=\"background: linear-gradient(27deg, rgb(255, 245, 248) 2%, rgba(255,179,169) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\n  <mat-card style=\"background-color: white; bottom: 0; max-height: 70% !important; color: black; min-width: 40%; max-width: 80%;\" *ngIf=\"size>0\">\n    <mat-card-title style=\"opacity: 1 !important; text-align: center; margin-bottom: 10px; color: rgba(43,95,235,1);\">\n      Selecione o(s) presente(s) que desejar.\n    </mat-card-title>\n    <div style=\"overflow-y: scroll; max-height: 360px;\">\n      <div class=\"row\" *ngFor=\"let product of productList\" style=\"margin-left: 10px; margin-top: 10px;\">\n        <mat-checkbox [(ngModel)]=\"product.checked\">{{product.name}}</mat-checkbox>\n      </div>\n    </div>\n    <mat-card-footer style=\"display: flex; justify-content: center; min-height: 10%;\">\n      <button mat-raised-button  style=\"margin-top: 5px; margin-bottom: 5px;\" (click)=\"selectProducts()\">Finalizar</button>\n    </mat-card-footer>\n  </mat-card>\n  <mat-spinner *ngIf=\"size==0\"></mat-spinner>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Person, Product } from '../selec-itens/itens-objects';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n\n  name: String;\n  productList: Product[] = [];\n\n  constructor(\n    private httpClient: HttpClient,\n  ) { }\n\n  public getProducts(): Observable<Product[]>{\n    return this.httpClient.get<Product[]>('http://ec2-54-207-204-85.sa-east-1.compute.amazonaws.com:8080/produto/v1');\n  }\n\n  public concludeSelection(person: Person): Observable<Person>{\n    return this.httpClient.post<Person>('http://ec2-54-207-204-85.sa-east-1.compute.amazonaws.com:8080/pessoa/v1', person);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thanks',\n  templateUrl: './thanks.component.html',\n  styleUrls: ['./thanks.component.scss']\n})\nexport class ThanksComponent implements OnInit {\n\n  height: String = \"30%\";\n  width: String = \"30%\";\n  mobile: boolean;\n\n  constructor() {\n    console.log(this.height);\n  }\n\n  ngOnInit(): void {\n    if (window.screen.width <= 425) { // 768px portrait\n      this.mobile = true;\n    }\n  }\n\n}\n","<div style=\"background: linear-gradient(27deg, rgba(0,0,0,1) 2%, rgba(130,138,204,1) 44%, rgba(43,95,235,1) 100%); background-size: cover; height: 100%; display: flex; align-items: center; justify-content: center;\">\n  <img src=\"../../assets/99938721-99AM_5LmFdZt6m3-iz0H85iyf5vMFR73-cropped-3x4-browser.png\" height=\"60%\" width=\"30%\">\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}